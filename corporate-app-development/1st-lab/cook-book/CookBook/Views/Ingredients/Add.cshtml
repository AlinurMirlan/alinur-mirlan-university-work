@model IngredientUnitsViewModel
@{
    ViewData["Title"] = "Cook Book Add Ingredient";
    ViewData["HeaderTitle"] = "Add Ingredient";
}

<section class="max-w-lg mx-auto">
    @if (Model.ErrorMessages.Count != 0)
    {
        <div id="error-messages" class="bg-err rounded-md mb-3">
            <ul>
                @foreach (string error in Model.ErrorMessages)
                {
                    <li class="text-on-err border-b font-semibold p-2">@error</li>
                }
            </ul>
        </div>
    }
    <form method="post">
        <div class="grid grid-cols-6 border border-outline rounded-t-md">
            <label for="dish" class="col-span-2 rounded-tl-md p-2 border-outline bg-sec-cont text-on-sec-cont">Ingredient</label>
            <input asp-for="Ingredient.Name" value="@Model.Ingredient.Name" placeholder="Name" class="col-span-4 focus:outline-none px-2 bg-sur border-outline border-b rounded-tr-md" id="Ingredient">
            <span class="col-span-2 p-2 border-outline bg-sec-cont text-on-sec-cont">Price per Unit</span>
            <div class="col-span-4 flex">
                <input asp-for="Ingredient.Price" value="@Model.Ingredient.Price" placeholder="Price" class="grow focus:outline-none px-2 bg-sur border-outline border-r">
                <select asp-for="Ingredient.Unit" asp-items="Model.Units" class="focus:outline-none bg-sur border-none outline-none scroll-smooth"></select>
            </div>
        </div>
        @for(int i = 0; i < Model.Units.Count; i++)
        {
            <input hidden asp-for="Units[i].Text" value="@Model.Units[i].Text"/>
            <input hidden asp-for="Units[i].Value" value="@Model.Units[i].Value" />
        }
        <button type="submit" class="bg-prim border rounded-full py-2 px-6 text-on-prim mt-3">Add</button>
    </form>
</section>
